/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockREQ, MockREQInterface } from "../MockREQ";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_max_supp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newCap",
        type: "uint256",
      },
    ],
    name: "MaxTotalSupplyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "MinterUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters_minted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCap",
        type: "uint256",
      },
    ],
    name: "resetMaxTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minterCap",
        type: "uint256",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bf338038062001bf38339810160408190526200003491620000fb565b604051806040016040528060078152602001665265717569656d60c81b8152506040518060400160405280600381526020016252455160e81b81525060128260039081620000839190620001ba565b506004620000928382620001ba565b5060058054336101009081026001600160a81b031990921660ff9094169390931717908190556040519190046001600160a01b03169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360065562000286565b6000602082840312156200010e57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014057607f821691505b6020821081036200016157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b557600081815260208120601f850160051c81016020861015620001905750805b601f850160051c820191505b81811015620001b1578281556001016200019c565b5050505b505050565b81516001600160401b03811115620001d657620001d662000115565b620001ee81620001e784546200012b565b8462000167565b602080601f8311600181146200022657600084156200020d5750858301515b600019600386901b1c1916600185901b178555620001b1565b600085815260208120601f198616915b82811015620002575788860151825594840194600190910190840162000236565b5085821015620002765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61195d80620002966000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063715018a6116100d85780639ce389981161008c578063dd62ed3e11610066578063dd62ed3e1461034e578063f2fde38b14610394578063f46eccc4146103a757600080fd5b80639ce3899814610315578063a457c2d714610328578063a9059cbb1461033b57600080fd5b806387de8498116100bd57806387de8498146102aa5780638da5cb5b146102ca57806395d89b411461030d57600080fd5b8063715018a61461028f57806379cc67901461029757600080fd5b806333039d3d1161013a57806342966c681161011457806342966c681461023357806360c918851461024657806370a082311461025957600080fd5b806333039d3d14610202578063395093511461020b57806340c10f191461021e57600080fd5b806318160ddd1161016b57806318160ddd146101c857806323b872dd146101da578063313ce567146101ed57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f6103c7565b60405161019c9190611706565b60405180910390f35b6101b86101b33660046117a2565b610459565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101b86101e83660046117cc565b61046f565b60055460405160ff909116815260200161019c565b6101cc60065481565b6101b86102193660046117a2565b61055a565b61023161022c3660046117a2565b6105a3565b005b610231610241366004611808565b610627565b610231610254366004611808565b610634565b6101cc610267366004611821565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610231610787565b6102316102a53660046117a2565b610881565b6101cc6102b8366004611821565b60086020526000908152604090205481565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019c565b61018f61093a565b6102316103233660046117a2565b610949565b6101b86103363660046117a2565b610b67565b6101b86103493660046117a2565b610c3f565b6101cc61035c366004611843565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6102316103a2366004611821565b610c4c565b6101cc6103b5366004611821565b60076020526000908152604090205481565b6060600380546103d690611876565b80601f016020809104026020016040519081016040528092919081815260200182805461040290611876565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b5050505050905090565b6000610466338484610e0d565b50600192915050565b600061047c848484610fc0565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020908152604080832033845290915290205482811015610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61054f8533858403610e0d565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161046691859061059e9086906118f8565b610e0d565b33600090815260076020526040902054610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f6e6c79206d696e7465722063616e20696e74657261637400000000000000006044820152606401610539565b610623828261127f565b5050565b61063133826113ab565b50565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1633146106ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b60025481101561074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f5f6e65774361702069732062656c6f772063757272656e7420746f74616c207360448201527f7570706c790000000000000000000000000000000000000000000000000000006064820152608401610539565b60068190556040518181527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af9060200160405180910390a150565b600554610100900473ffffffffffffffffffffffffffffffffffffffff16331461080d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b600554604051600091610100900473ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff169055565b600061088d833361035c565b90508181101561091e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610539565b61092b8333848403610e0d565b61093583836113ab565b505050565b6060600480546103d690611876565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1633146109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610a4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c6964206164647265737300000000000000000000000000000000006044820152606401610539565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260086020526040902054811015610b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4d696e74657220616c7265616479206d696e7465642061206c6172676572206160448201527f6d6f756e74207468616e206e65772063617000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602052604090819020839055517f4806dc7228dc0d536104603610b1cf9b1c98f326289316cf3188bf1c6cf3ef5e90610b5b9084815260200190565b60405180910390a25050565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015610c28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610539565b610c353385858403610e0d565b5060019392505050565b6000610466338484610fc0565b600554610100900473ffffffffffffffffffffffffffffffffffffffff163314610cd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b73ffffffffffffffffffffffffffffffffffffffff8116610d75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610539565b60055460405173ffffffffffffffffffffffffffffffffffffffff80841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff8316610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610f52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216611106576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610539565b6111118383836115a4565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822085850390559185168152908120805484929061120b9084906118f8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161127191815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff82166112fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610539565b611308600083836115a4565b806002600082825461131a91906118f8565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080548392906113549084906118f8565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821661144e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610539565b61145a826000836115a4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015611510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040812083830390556002805484929061154c908490611910565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661163e57600654816115cc60025490565b6115d691906118f8565b111561163e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d617820746f74616c20737570706c79206578636565646564000000000000006044820152606401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610935578060065410156116ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4275726e20616d6f756e742065786365656473206d617820746f74616c20737560448201527f70706c79000000000000000000000000000000000000000000000000000000006064820152608401610539565b80600660008282546116fc9190611910565b9091555050505050565b600060208083528351808285015260005b8181101561173357858101830151858201604001528201611717565b81811115611745576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461179d57600080fd5b919050565b600080604083850312156117b557600080fd5b6117be83611779565b946020939093013593505050565b6000806000606084860312156117e157600080fd5b6117ea84611779565b92506117f860208501611779565b9150604084013590509250925092565b60006020828403121561181a57600080fd5b5035919050565b60006020828403121561183357600080fd5b61183c82611779565b9392505050565b6000806040838503121561185657600080fd5b61185f83611779565b915061186d60208401611779565b90509250929050565b600181811c9082168061188a57607f821691505b6020821081036118c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561190b5761190b6118c9565b500190565b600082821015611922576119226118c9565b50039056fea26469706673582212209e77d2d02c389b6ec81a83ad7b30019f506b6cf791f78646c12534e1d9f134ff64736f6c634300080f0033";

export class MockREQ__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _max_supp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockREQ> {
    return super.deploy(_max_supp, overrides || {}) as Promise<MockREQ>;
  }
  getDeployTransaction(
    _max_supp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_max_supp, overrides || {});
  }
  attach(address: string): MockREQ {
    return super.attach(address) as MockREQ;
  }
  connect(signer: Signer): MockREQ__factory {
    return super.connect(signer) as MockREQ__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockREQInterface {
    return new utils.Interface(_abi) as MockREQInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockREQ {
    return new Contract(address, _abi, signerOrProvider) as MockREQ;
  }
}

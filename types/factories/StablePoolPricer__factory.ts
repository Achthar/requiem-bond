/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StablePoolPricer,
  StablePoolPricerInterface,
} from "../StablePoolPricer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "slashedValuation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b42806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315739b0014610046578063831abd4414610046578063ae25331c1461006b575b600080fd5b610059610054366004610788565b61007e565b60405190815260200160405180910390f35b6100596100793660046107c9565b610095565b600061008b8484846103de565b90505b9392505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16638119c0656040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101079190610802565b905060008173ffffffffffffffffffffffffffffffffffffffff16633cf15bac6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610156573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261019c91908101906108c1565b905060008273ffffffffffffffffffffffffffffffffffffffff1663a1dc90316040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102319190810190610960565b905060005b81518160ff1610156103d4576000838260ff1681518110610259576102596109e6565b602002602001015190508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610396578473ffffffffffffffffffffffffffffffffffffffff1663e9255bae8289612710878760ff16815181106102cc576102cc6109e6565b60200260200101516102de9190610a44565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015610355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103799190610a7f565b61038590612710610a98565b61038f9087610ad5565b95506103c1565b828260ff16815181106103ab576103ab6109e6565b6020026020010151866103be9190610ad5565b95505b50806103cc81610aed565b915050610236565b5050505092915050565b6000806103eb8585610095565b905060008573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610a7f565b9050670de0b6b3a764000061047b6104768684610499565b610662565b6104859084610a98565b61048f9190610a44565b9695505050505050565b6040805160208101909152600081526000821161053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201527f79207a65726f000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b8260000361055a575060408051602081019091526000815261065c565b71ffffffffffffffffffffffffffffffffffff831161064057600061058383607086901b610a44565b90507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f7700006044820152606401610534565b6040518060200160405280827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525091505061065c565b6000610583846e01000000000000000000000000000085610697565b92915050565b805160009061065c906612725dd1d243ab907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610a44565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036106ee57600084116106e357600080fd5b50829004905061008e565b8084116106fa57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461078557600080fd5b50565b60008060006060848603121561079d57600080fd5b83356107a881610763565b925060208401356107b881610763565b929592945050506040919091013590565b600080604083850312156107dc57600080fd5b82356107e781610763565b915060208301356107f781610763565b809150509250929050565b60006020828403121561081457600080fd5b815161008e81610763565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108955761089561081f565b604052919050565b600067ffffffffffffffff8211156108b7576108b761081f565b5060051b60200190565b600060208083850312156108d457600080fd5b825167ffffffffffffffff8111156108eb57600080fd5b8301601f810185136108fc57600080fd5b805161090f61090a8261089d565b61084e565b81815260059190911b8201830190838101908783111561092e57600080fd5b928401925b8284101561095557835161094681610763565b82529284019290840190610933565b979650505050505050565b6000602080838503121561097357600080fd5b825167ffffffffffffffff81111561098a57600080fd5b8301601f8101851361099b57600080fd5b80516109a961090a8261089d565b81815260059190911b820183019083810190878311156109c857600080fd5b928401925b82841015610955578351825292840192908401906109cd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082610a7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610a9157600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ad057610ad0610a15565b500290565b60008219821115610ae857610ae8610a15565b500190565b600060ff821660ff8103610b0357610b03610a15565b6001019291505056fea26469706673582212202d336a53f56cef7281ae051c3b8076ada0d3ee4fd2244953ec64545f97c9423764736f6c634300080e0033";

export class StablePoolPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StablePoolPricer> {
    return super.deploy(overrides || {}) as Promise<StablePoolPricer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StablePoolPricer {
    return super.attach(address) as StablePoolPricer;
  }
  connect(signer: Signer): StablePoolPricer__factory {
    return super.connect(signer) as StablePoolPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StablePoolPricerInterface {
    return new utils.Interface(_abi) as StablePoolPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StablePoolPricer {
    return new Contract(address, _abi, signerOrProvider) as StablePoolPricer;
  }
}

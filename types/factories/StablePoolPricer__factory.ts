/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StablePoolPricer,
  StablePoolPricerInterface,
} from "../StablePoolPricer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_QUOTE",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "QUOTE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c5e380380610c5e83398101604081905261002f91610053565b6001600160a01b03811661004257600080fd5b6001600160a01b0316608052610083565b60006020828403121561006557600080fd5b81516001600160a01b038116811461007c57600080fd5b9392505050565b608051610bb36100ab6000396000818160a20152818161038301526103f30152610bb36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806332da80a3146100515780634249719f14610077578063686375491461008a5780639c5798391461009d575b600080fd5b61006461005f36600461082a565b6100e9565b6040519081526020015b60405180910390f35b610064610085366004610847565b6100fa565b61006461009836600461082a565b6101b3565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161006e565b60006100f4826101b3565b92915050565b600080610106846101b3565b905060008473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101799190610873565b9050670de0b6b3a7640000610196610191868461053b565b6106fe565b6101a090846108bb565b6101aa91906108f8565b95945050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff16638119c0656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190610933565b905060008173ffffffffffffffffffffffffffffffffffffffff16633cf15bac6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610274573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102ba91908101906109f2565b905060008273ffffffffffffffffffffffffffffffffffffffff1663a1dc90316040518163ffffffff1660e01b8152600401600060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261034f9190810190610a91565b905060005b81518160ff161015610532576000838260ff168151811061037757610377610b17565b602002602001015190507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104f4578473ffffffffffffffffffffffffffffffffffffffff1663e9255bae827f0000000000000000000000000000000000000000000000000000000000000000612710878760ff168151811061042a5761042a610b17565b602002602001015161043c91906108f8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190610873565b6104e3906127106108bb565b6104ed9087610b46565b955061051f565b828260ff168151811061050957610509610b17565b60200260200101518661051c9190610b46565b95505b508061052a81610b5e565b915050610354565b50505050919050565b604080516020810190915260008152600082116105df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201527f79207a65726f000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b826000036105fc57506040805160208101909152600081526100f4565b71ffffffffffffffffffffffffffffffffffff83116106e257600061062583607086901b6108f8565b90507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156106ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77000060448201526064016105d6565b6040518060200160405280827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509150506100f4565b6000610625846e01000000000000000000000000000085610733565b80516000906100f4906612725dd1d243ab907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166108f8565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361078a576000841161077f57600080fd5b5082900490506107fe565b80841161079657600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082757600080fd5b50565b60006020828403121561083c57600080fd5b81356107fe81610805565b6000806040838503121561085a57600080fd5b823561086581610805565b946020939093013593505050565b60006020828403121561088557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108f3576108f361088c565b500290565b60008261092e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561094557600080fd5b81516107fe81610805565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109c6576109c6610950565b604052919050565b600067ffffffffffffffff8211156109e8576109e8610950565b5060051b60200190565b60006020808385031215610a0557600080fd5b825167ffffffffffffffff811115610a1c57600080fd5b8301601f81018513610a2d57600080fd5b8051610a40610a3b826109ce565b61097f565b81815260059190911b82018301908381019087831115610a5f57600080fd5b928401925b82841015610a86578351610a7781610805565b82529284019290840190610a64565b979650505050505050565b60006020808385031215610aa457600080fd5b825167ffffffffffffffff811115610abb57600080fd5b8301601f81018513610acc57600080fd5b8051610ada610a3b826109ce565b81815260059190911b82018301908381019087831115610af957600080fd5b928401925b82841015610a8657835182529284019290840190610afe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610b5957610b5961088c565b500190565b600060ff821660ff8103610b7457610b7461088c565b6001019291505056fea26469706673582212203e062a30c0f82c4f80348480eb43f0a129da6fbf4ce0fdfa44b4d2958429363164736f6c634300080e0033";

export class StablePoolPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _QUOTE: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StablePoolPricer> {
    return super.deploy(_QUOTE, overrides || {}) as Promise<StablePoolPricer>;
  }
  getDeployTransaction(
    _QUOTE: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_QUOTE, overrides || {});
  }
  attach(address: string): StablePoolPricer {
    return super.attach(address) as StablePoolPricer;
  }
  connect(signer: Signer): StablePoolPricer__factory {
    return super.connect(signer) as StablePoolPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StablePoolPricerInterface {
    return new utils.Interface(_abi) as StablePoolPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StablePoolPricer {
    return new Contract(address, _abi, signerOrProvider) as StablePoolPricer;
  }
}

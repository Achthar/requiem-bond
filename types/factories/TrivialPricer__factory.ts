/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TrivialPricer, TrivialPricerInterface } from "../TrivialPricer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806332da80a314610046578063686375491461006b578063831abd441461007e575b600080fd5b610059610054366004610264565b610091565b60405190815260200160405180910390f35b610059610079366004610264565b6100a2565b61005961008c366004610286565b6101a2565b600061009c826100a2565b92915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011391906102c2565b61011e906012610314565b61012990600a610457565b8273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101989190610466565b61009c919061047f565b60008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021391906102c2565b61021e906012610314565b61022990600a610457565b610233908361047f565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461025f57600080fd5b919050565b60006020828403121561027657600080fd5b61027f8261023b565b9392505050565b60008060006060848603121561029b57600080fd5b6102a48461023b565b92506102b26020850161023b565b9150604084013590509250925092565b6000602082840312156102d457600080fd5b815160ff8116811461027f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168082101561032e5761032e6102e5565b90039392505050565b600181815b8085111561039057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610376576103766102e5565b8085161561038357918102915b93841c939080029061033c565b509250929050565b6000826103a75750600161009c565b816103b45750600061009c565b81600181146103ca57600281146103d4576103f0565b600191505061009c565b60ff8411156103e5576103e56102e5565b50506001821b61009c565b5060208310610133831016604e8410600b8410161715610413575081810a61009c565b61041d8383610337565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561044f5761044f6102e5565b029392505050565b600061027f60ff841683610398565b60006020828403121561047857600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104b7576104b76102e5565b50029056fea2646970667358221220e8da19de85cedb9ec622b8158c17362d47ebdf9d4c67aefe4b0e3453ad09ea5764736f6c634300080e0033";

export class TrivialPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrivialPricer> {
    return super.deploy(overrides || {}) as Promise<TrivialPricer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrivialPricer {
    return super.attach(address) as TrivialPricer;
  }
  connect(signer: Signer): TrivialPricer__factory {
    return super.connect(signer) as TrivialPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrivialPricerInterface {
    return new utils.Interface(_abi) as TrivialPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrivialPricer {
    return new Contract(address, _abi, signerOrProvider) as TrivialPricer;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TrivialPricer, TrivialPricerInterface } from "../TrivialPricer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "slashedValuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806315739b0014610046578063686375491461006b578063831abd4414610046575b600080fd5b610059610054366004610246565b61007e565b60405190815260200160405180910390f35b610059610079366004610282565b610117565b60008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef91906102a4565b6100fa9060126102f6565b61010590600a610439565b61010f9083610448565b949350505050565b60008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610164573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018891906102a4565b6101939060126102f6565b61019e90600a610439565b8273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610485565b6102179190610448565b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461024157600080fd5b919050565b60008060006060848603121561025b57600080fd5b6102648461021d565b92506102726020850161021d565b9150604084013590509250925092565b60006020828403121561029457600080fd5b61029d8261021d565b9392505050565b6000602082840312156102b657600080fd5b815160ff8116811461029d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff841680821015610310576103106102c7565b90039392505050565b600181815b8085111561037257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610358576103586102c7565b8085161561036557918102915b93841c939080029061031e565b509250929050565b60008261038957506001610217565b8161039657506000610217565b81600181146103ac57600281146103b6576103d2565b6001915050610217565b60ff8411156103c7576103c76102c7565b50506001821b610217565b5060208310610133831016604e8410600b84101617156103f5575081810a610217565b6103ff8383610319565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610431576104316102c7565b029392505050565b600061029d60ff84168361037a565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610480576104806102c7565b500290565b60006020828403121561049757600080fd5b505191905056fea2646970667358221220ade76d3b568fc733e9ce51bea3e5fd658a97bd8459ff8863dc7a073bd441496c64736f6c634300080f0033";

export class TrivialPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrivialPricer> {
    return super.deploy(overrides || {}) as Promise<TrivialPricer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrivialPricer {
    return super.attach(address) as TrivialPricer;
  }
  connect(signer: Signer): TrivialPricer__factory {
    return super.connect(signer) as TrivialPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrivialPricerInterface {
    return new utils.Interface(_abi) as TrivialPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrivialPricer {
    return new Contract(address, _abi, signerOrProvider) as TrivialPricer;
  }
}

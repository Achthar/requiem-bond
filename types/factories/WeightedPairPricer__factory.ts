/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedPairPricer,
  WeightedPairPricerInterface,
} from "../WeightedPairPricer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062450a4614610045578063831abd441461006a578063ae25331c1461007d575b600080fd5b610058610053366004610431565b610090565b60405190815260200160405180910390f35b61005861007836600461046a565b6100a5565b61005861008b366004610431565b610146565b600061009c8383610146565b90505b92915050565b6000806100b28585610146565b905060008573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610101573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012591906104ab565b90508061013285846104f3565b61013c9190610530565b9695505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b8919061056b565b90506000808573ffffffffffffffffffffffffffffffffffffffff1663a5ea11da6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c9190610611565b5050915091508573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190610665565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361032a5760608301516102e89063ffffffff84166104f3565b83602001518263ffffffff16856040015161030391906104f3565b61030d91906104f3565b6103179190610530565b83516103239190610689565b935061037d565b604083015161033f9063ffffffff83166104f3565b835160608501516103579063ffffffff8616906104f3565b61036191906104f3565b61036b9190610530565b836020015161037a9190610689565b93505b8473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec91906106a1565b6103f79060126106c4565b61040290600a610807565b61013c90856104f3565b73ffffffffffffffffffffffffffffffffffffffff8116811461042e57600080fd5b50565b6000806040838503121561044457600080fd5b823561044f8161040c565b9150602083013561045f8161040c565b809150509250929050565b60008060006060848603121561047f57600080fd5b833561048a8161040c565b9250602084013561049a8161040c565b929592945050506040919091013590565b6000602082840312156104bd57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561052b5761052b6104c4565b500290565b600082610566577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006080828403121561057d57600080fd5b6040516080810181811067ffffffffffffffff821117156105c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b805163ffffffff8116811461060c57600080fd5b919050565b6000806000806080858703121561062757600080fd5b610630856105f8565b935061063e602086016105f8565b925061064c604086016105f8565b915061065a606086016105f8565b905092959194509250565b60006020828403121561067757600080fd5b81516106828161040c565b9392505050565b6000821982111561069c5761069c6104c4565b500190565b6000602082840312156106b357600080fd5b815160ff8116811461068257600080fd5b600060ff821660ff8416808210156106de576106de6104c4565b90039392505050565b600181815b8085111561074057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610726576107266104c4565b8085161561073357918102915b93841c93908002906106ec565b509250929050565b6000826107575750600161009f565b816107645750600061009f565b816001811461077a5760028114610784576107a0565b600191505061009f565b60ff841115610795576107956104c4565b50506001821b61009f565b5060208310610133831016604e8410600b84101617156107c3575081810a61009f565b6107cd83836106e7565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156107ff576107ff6104c4565b029392505050565b600061009c60ff84168361074856fea2646970667358221220b719b6345c8fbe0a2045be8360920384eabe6e102d6fdfcf2ccf6ac9119461d464736f6c634300080e0033";

export class WeightedPairPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedPairPricer> {
    return super.deploy(overrides || {}) as Promise<WeightedPairPricer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WeightedPairPricer {
    return super.attach(address) as WeightedPairPricer;
  }
  connect(signer: Signer): WeightedPairPricer__factory {
    return super.connect(signer) as WeightedPairPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedPairPricerInterface {
    return new utils.Interface(_abi) as WeightedPairPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedPairPricer {
    return new Contract(address, _abi, signerOrProvider) as WeightedPairPricer;
  }
}

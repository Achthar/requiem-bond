/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedPoolPricer,
  WeightedPoolPricerInterface,
} from "../WeightedPoolPricer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062450a4614610045578063831abd441461006a578063ae25331c1461007d575b600080fd5b61005861005336600461081e565b610090565b60405190815260200160405180910390f35b610058610078366004610857565b6100a5565b61005861008b36600461081e565b610160565b600061009c8383610160565b90505b92915050565b6000806100b28585610160565b905060008573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101259190610898565b9050670de0b6b3a764000061014261013d868461052f565b6106f2565b61014c90846108e0565b610156919061091d565b9695505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16638119c0656040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d29190610958565b905060008173ffffffffffffffffffffffffffffffffffffffff16633cf15bac6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610221573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102679190810190610a17565b905060008273ffffffffffffffffffffffffffffffffffffffff1663a1dc90316040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102fc9190810190610ab6565b905060005b81518160ff16101561049f576000838260ff168151811061032457610324610b3c565b602002602001015190508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610461578473ffffffffffffffffffffffffffffffffffffffff1663e9255bae8289612710878760ff168151811061039757610397610b3c565b60200260200101516103a9919061091d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610898565b610450906127106108e0565b61045a9087610b6b565b955061048c565b828260ff168151811061047657610476610b3c565b6020026020010151866104899190610b6b565b95505b508061049781610b83565b915050610301565b508473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050f9190610ba2565b61051a906012610bc5565b61052590600a610d08565b61015690856108e0565b604080516020810190915260008152600082116105d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201527f79207a65726f000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b826000036105f0575060408051602081019091526000815261009f565b71ffffffffffffffffffffffffffffffffffff83116106d657600061061983607086901b61091d565b90507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77000060448201526064016105ca565b6040518060200160405280827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525091505061009f565b6000610619846e01000000000000000000000000000085610727565b805160009061009f906612725dd1d243ab907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661091d565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361077e576000841161077357600080fd5b5082900490506107f2565b80841161078a57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461081b57600080fd5b50565b6000806040838503121561083157600080fd5b823561083c816107f9565b9150602083013561084c816107f9565b809150509250929050565b60008060006060848603121561086c57600080fd5b8335610877816107f9565b92506020840135610887816107f9565b929592945050506040919091013590565b6000602082840312156108aa57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610918576109186108b1565b500290565b600082610953577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561096a57600080fd5b81516107f2816107f9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109eb576109eb610975565b604052919050565b600067ffffffffffffffff821115610a0d57610a0d610975565b5060051b60200190565b60006020808385031215610a2a57600080fd5b825167ffffffffffffffff811115610a4157600080fd5b8301601f81018513610a5257600080fd5b8051610a65610a60826109f3565b6109a4565b81815260059190911b82018301908381019087831115610a8457600080fd5b928401925b82841015610aab578351610a9c816107f9565b82529284019290840190610a89565b979650505050505050565b60006020808385031215610ac957600080fd5b825167ffffffffffffffff811115610ae057600080fd5b8301601f81018513610af157600080fd5b8051610aff610a60826109f3565b81815260059190911b82018301908381019087831115610b1e57600080fd5b928401925b82841015610aab57835182529284019290840190610b23565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610b7e57610b7e6108b1565b500190565b600060ff821660ff8103610b9957610b996108b1565b60010192915050565b600060208284031215610bb457600080fd5b815160ff811681146107f257600080fd5b600060ff821660ff841680821015610bdf57610bdf6108b1565b90039392505050565b600181815b80851115610c4157817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610c2757610c276108b1565b80851615610c3457918102915b93841c9390800290610bed565b509250929050565b600082610c585750600161009f565b81610c655750600061009f565b8160018114610c7b5760028114610c8557610ca1565b600191505061009f565b60ff841115610c9657610c966108b1565b50506001821b61009f565b5060208310610133831016604e8410600b8410161715610cc4575081810a61009f565b610cce8383610be8565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610d0057610d006108b1565b029392505050565b600061009c60ff841683610c4956fea26469706673582212201646580483521166745cfb17ce28111b2a8bc0bb59838aaa2f5d6ef27d44807464736f6c634300080e0033";

export class WeightedPoolPricer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedPoolPricer> {
    return super.deploy(overrides || {}) as Promise<WeightedPoolPricer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WeightedPoolPricer {
    return super.attach(address) as WeightedPoolPricer;
  }
  connect(signer: Signer): WeightedPoolPricer__factory {
    return super.connect(signer) as WeightedPoolPricer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedPoolPricerInterface {
    return new utils.Interface(_abi) as WeightedPoolPricerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedPoolPricer {
    return new Contract(address, _abi, signerOrProvider) as WeightedPoolPricer;
  }
}
